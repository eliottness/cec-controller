name: Build, Test and Release

on:
  push:
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Dry run mode (builds and packages but does not publish release)'
        required: true
        type: boolean
        default: true

jobs:
  test:
    name: Test on Ubuntu
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Install libcec for testing
        run: |
          sudo apt-get update
          sudo apt-get install -y libcec-dev libp8-platform-dev

  release:
    name: build binaries
    needs: test
    runs-on: ${{ matrix.runs-on }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
            go-version: stable

      - name: install dependencies
        run: |
          dpkg --add-architecture arm64
          
          apt update
          apt install -y --no-install-recommends libcec-dev libp8-platform-dev libudev-dev gcc
        
          apt install -y --no-install-recommends gcc-multilib
          apt install -y --no-install-recommends gcc-aarch64-linux-gnu libcec-dev:arm64 libp8-platform-dev:arm64 libudev-dev:arm64

      - name: Run tests
        run: CGO_ENABLED=1 go test -v ./...

      - name: Run GoReleaser (Dry Run)
        if: ${{ github.event_name == 'pull_request' || (github.event_name == 'workflow_dispatch' && github.event.inputs.dry_run == 'true') }}
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release --snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run GoReleaser (Release)
        if: ${{ github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.dry_run != 'true') }}
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/